syntax = "proto3";

package kvstore;

option go_package = "github.com/QuangTung97/kvstore/kvstorepb;kvstorepb";

// CommandType for all types
enum CommandType {
  // COMMAND_TYPE_UNSPECIFIED
  COMMAND_TYPE_UNSPECIFIED = 0;
  // COMMAND_TYPE_LEASE_GET
  COMMAND_TYPE_LEASE_GET = 1;
  // COMMAND_TYPE_LEASE_SET
  COMMAND_TYPE_LEASE_SET = 2;
  // COMMAND_TYPE_INVALIDATE
  COMMAND_TYPE_INVALIDATE = 3;
}

// Command
message Command {
  CommandType type = 1;
  uint64 id = 2;
  CommandLeaseGet lease_get = 3;
  CommandLeaseSet lease_set = 4;
  CommandInvalidate invalidate = 5;
}

// CommandResult for response data
message CommandResult {
  CommandType type = 1;
  uint64 id = 2;
  CommandLeaseGetResult lease_get = 3;
  CommandLeaseSetResult lease_set = 4;
  CommandInvalidateResult invalidate = 5;
}

// CommandLeaseGet for lease get
message CommandLeaseGet {
  string key = 1;
}

// LeaseStatus status of lease get
enum LeaseGetStatus {
  // LEASE_GET_STATUS_FOUND
  LEASE_GET_STATUS_FOUND = 0;
  // LEASE_GET_STATUS_LEASE_GRANTED
  LEASE_GET_STATUS_LEASE_GRANTED = 1;
  // LEASE_GET_STATUS_LEASE_REJECTED
  LEASE_GET_STATUS_LEASE_REJECTED = 2;
}

// CommandLeaseGetResult for lease get response
message CommandLeaseGetResult {
  LeaseGetStatus status = 1;
  uint64 lease_id = 2;
  string data = 3;
}

// CommandLeaseSet for lease set
message CommandLeaseSet {
  string key = 1;
  uint64 lease_id = 2;
}

// CommandLeaseSetResult for lease set
message CommandLeaseSetResult {
  bool affected = 1;
}

// CommandInvalidate for invalidate
message CommandInvalidate {
  string key = 1;
}

// CommandInvalidateResult for invalidate
message CommandInvalidateResult {
  bool affected = 1;
}

// CommandList a list of commands
message CommandList {
  repeated Command commands = 1;
}

// CommandResultList a list of command results
message CommandResultList {
  repeated CommandResult results = 1;
}
